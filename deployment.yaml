apiVersion: v1
kind: Service
metadata:
  name: client
spec:
  type: LoadBalancer
  selector:
    app: react
    tier: client
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata: 
  name: fastapi
spec:
  type: ClusterIP
  selector:
    component: fastapi
  ports:
    - port: 4200
      targetPort: 4200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
spec:
  replicas: 3
  selector:
    matchLabels:
      component: fastapi
  template:
    metadata:
      labels:
        component: fastapi
    spec:
      containers:
        - name: cowin-sub-server
          image: asia.gcr.io/sanpj-fun-gamers/cowin-notification-subscriber/cowin-sub-server:latest
          imagePullPolicy: "Always"
          resources:
            limits:
              cpu: "1000m"
            requests:
              cpu: "400m"
          livenessProbe:
            httpGet:
              path: /health
              port: 4200
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 4200
            initialDelaySeconds: 30
            periodSeconds: 5
          ports:
            - containerPort: 4200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react
      tier: client
  template:
    metadata:
      labels:
        app: react
        tier: client
    spec:
      containers:
        - name: cowin-sub-client
          image: asia.gcr.io/sanpj-fun-gamers/cowin-notification-subscriber/cowin-sub-client:latest
          imagePullPolicy: "Always"
          resources:
            limits:
              cpu: "1000m"
            requests:
              cpu: "400m"
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 5
          ports:
            - containerPort: 80
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiregistration.k8s.io/v1","kind":"APIService","metadata":{"annotations":{},"creationTimestamp":"2021-05-19T04:09:57Z","labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app.kubernetes.io/managed-by":"gcp-cloud-build-deploy","kubernetes.io/cluster-service":"true"},"name":"v1beta1.metrics.k8s.io","resourceVersion":"853006","selfLink":"/apis/apiregistration.k8s.io/v1/apiservices/v1beta1.metrics.k8s.io","uid":"3c2f5609-9f28-43ad-9bb8-4bf45f01595f"},"spec":{"group":"metrics.k8s.io","groupPriorityMinimum":100,"insecureSkipTLSVerify":true,"service":{"name":"metrics-server","namespace":"kube-system","port":443},"version":"v1beta1","versionPriority":100},"status":{"conditions":[{"lastTransitionTime":"2021-05-19T04:11:16Z","message":"all checks passed","reason":"Passed","status":"True","type":"Available"}]}}
  creationTimestamp: "2021-05-19T04:09:57Z"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    app.kubernetes.io/managed-by: gcp-cloud-build-deploy
    kubernetes.io/cluster-service: "true"
  name: v1beta1.metrics.k8s.io
  resourceVersion: "864544"
  selfLink: /apis/apiregistration.k8s.io/v1/apiservices/v1beta1.metrics.k8s.io
  uid: 3c2f5609-9f28-43ad-9bb8-4bf45f01595f
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: metrics-server
    namespace: kube-system
    port: 443
  version: v1beta1
  versionPriority: 100
status:
  conditions:
  - lastTransitionTime: "2021-05-19T04:11:16Z"
    message: all checks passed
    reason: Passed
    status: "True"
    type: Available