version: "3"
services:
    client:
        container_name: client-sub
        build: 
            context: ./client
            args:
                - env=development
        restart: always
        depends_on:
            - db
            - pgadmin
            - server
        volumes:
            - ./client:/usr/cowin/client
        ports:
            - 80:80
        networks:
            - cowin_sub_network
        environment:
            - NODE_ENV=production
            - CHOKIDAR_USEPOLLING="true"
    server:
        container_name: server-cowin
        build: ./server
        env_file:
            - db.env
        ports:
            - 4200:4200
        restart: always
        command: bash -c "alembic upgrade head && python app.py"
        volumes:
            - ./server:/usr/cowin/server
            - ./secrets:/usr/src/app/secrets
        depends_on:
            db:
                condition: service_healthy
        links:
            - db:db
        networks:
            - cowin_sub_network
    db:
        image: postgres:13-alpine
        container_name: db-cowin
        env_file:
            - db.env
        restart: always
        volumes:
            - ./db_data:/var/lib/postgresql/data
            # - ./pgscripts/:/docker-entrypoint-initdb.d/
        networks:
            - cowin_sub_network
        ports:
            - 5432:5432
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 1s
            timeout: 5s
            retries: 5
    pgadmin:
        image: dpage/pgadmin4
        container_name: cowin-pgadmin
        environment:
            - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
            - PGADMIN_DEFAULT_PASSWORD=admin
            - PGADMIN_LISTEN_PORT=5050
        ports:
            - 5050:5050
        depends_on:
            - db
        networks:
            - cowin_sub_network

networks:
    cowin_sub_network:
        driver: bridge
#     GCP:
#         external: true